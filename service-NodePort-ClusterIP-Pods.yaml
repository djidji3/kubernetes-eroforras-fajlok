apiVersion: v1
kind: Service
metadata:   # fontos a service-re valo hivatkozaskor a cimkezese
  name: web-svc
  labels:
    type: frontend-service
    name: web-service
spec:
  type: NodePort # kivulro lesz elerheto   
  selector: # pod cimkek megadasa, amelyek fele kell iranyitani a forgalmat
    name: web
    type: frontend
    app: app002
  
  ports: 
  - name: http
    port: 80       # ezen a porton erheto el a ClusterIP service belul 
    targetPort: 80 # opcionalis. A service ezen eri el a pod-ot (a pod-ban megadottakal egyezoen)
    protocol: TCP
    nodePort: 30020 # opcionalis. Ha nem adom meg,akkor automatikus portot hasznal

  - name: https
    port: 443       # ezen a porton erheto el a ClusterIP service belul 

---

apiVersion: v1
kind: Service
metadata:   # fontos a service-re valo hivatkozaskor a cimkezese
  name: php-backend
  labels:
    type: backend-service
    name: php-service
spec:
  type: ClusterIP # belul lesz elerheto
  
  selector: # pod cimkek megadasa, amelyek fele kell iranyitani a forgalmat
    name: php-fpm
    app: app001
    type: backend
  
  ports: 
  - name: php
    port: 9000 # ezen a porton erheto el a service belul (ClasterIP)
    targetPort: 9000 # a service ezen eri el a pod-ot (a pod-ban megadottakal egyezoen)

---

apiVersion: v1
kind: Pod
metadata:
  name: web-pod
  labels:
    name: web
    type: frontend
    app: app002
spec:
  containers:
  - name: web
    image: nginx:1.21
    resources:
      limits:
        memory: "128Mi"
        cpu: "500m"
    ports:
      - containerPort: 80
      - containerPort: 443

---

apiVersion: v1
kind: Pod
metadata:
  name: php-pod
  labels:
    name: php-fpm
    app: app001
    type: backend
spec:
  containers:
  - name: php-fpm
    image: php:8.0-fpm
    resources:
      limits:
        memory: "128Mi"
        cpu: "500m"
    ports:
      - containerPort: 9000